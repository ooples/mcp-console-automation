{
  "testConfig": {
    "TEST_TIMEOUT": 30000,
    "LOG_FILE": "C:\\Users\\yolan\\source\\repos\\mcp-console-automation\\mcp-debug.log",
    "TEST_COMMAND": "echo \"Hello World\"",
    "CONSOLE_TYPE": "auto"
  },
  "totalDuration": 31030,
  "timeline": [
    {
      "timestamp": 0,
      "type": "INFO",
      "message": "=== Starting Hang Debug Test ==="
    },
    {
      "timestamp": 3,
      "type": "INFO",
      "message": "Starting MCP Console Automation server..."
    },
    {
      "timestamp": 3,
      "type": "INFO",
      "message": "Server path: C:\\Users\\yolan\\source\\repos\\mcp-console-automation\\dist\\mcp\\server.js"
    },
    {
      "timestamp": 843,
      "type": "SERVER",
      "message": "Server process closed with code 0, signal null"
    },
    {
      "timestamp": 1014,
      "type": "INFO",
      "message": "Server started, sending initialize request..."
    },
    {
      "timestamp": 1015,
      "type": "INFO",
      "message": "Sending request: {\"jsonrpc\":\"2.0\",\"id\":0,\"method\":\"initialize\",\"params\":{\"protocolVersion\":\"2024-11-05\",\"capabilities\":{},\"clientInfo\":{\"name\":\"hang-debugger\",\"version\":\"1.0.0\"}}}..."
    },
    {
      "timestamp": 1015,
      "type": "INFO",
      "message": "Request written to server stdin"
    },
    {
      "timestamp": 31028,
      "type": "ERROR",
      "message": "REQUEST TIMEOUT - This is where the hang likely occurs!"
    },
    {
      "timestamp": 31029,
      "type": "ERROR",
      "message": "Initialize failed: Request timeout - hang detected!"
    },
    {
      "timestamp": 31030,
      "type": "ERROR",
      "message": "=== Test failed with error: Request timeout - hang detected! ==="
    },
    {
      "timestamp": 31030,
      "type": "ERROR",
      "message": "=== HANG CONFIRMED - Collecting debug information ==="
    },
    {
      "timestamp": 31030,
      "type": "INFO",
      "message": "=== GENERATING FINAL REPORT ==="
    },
    {
      "timestamp": 31030,
      "type": "WARN",
      "message": "Debug log file does not exist yet"
    }
  ],
  "serverOutput": {
    "stdout": "",
    "stderr": ""
  },
  "debugLog": "",
  "analysis": {
    "hangDetected": false,
    "lastSuccessfulStep": "",
    "possibleHangPoint": "",
    "recommendations": []
  }
}
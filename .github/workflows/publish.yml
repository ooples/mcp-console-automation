name: Publish

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

jobs:
  quality-checks:
    name: Quality Checks
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.os }}-node-

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint

    - name: Run type checking
      run: npm run typecheck

    - name: Run tests
      run: npx jest --config jest.config.ci.cjs --passWithNoTests

    - name: Build
      run: npm run build

  publish-npm:
    name: Publish to NPM
    needs: quality-checks
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    outputs:
      published: ${{ steps.version_check.outputs.should_publish }}
      version: ${{ steps.version_check.outputs.current_version }}

    permissions:
      contents: write
      packages: write

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.os }}-node-

    - name: Install dependencies
      run: npm ci

    - name: Build
      run: npm run build

    - name: Check if version changed
      id: version_check
      run: |
        CURRENT_VERSION=$(node -p "require('./package.json').version")
        PUBLISHED_VERSION=$(npm view mcp-console-automation version 2>/dev/null || echo "0.0.0")

        echo "current_version=${CURRENT_VERSION}" >> $GITHUB_OUTPUT
        echo "published_version=${PUBLISHED_VERSION}" >> $GITHUB_OUTPUT

        if [ "$CURRENT_VERSION" != "$PUBLISHED_VERSION" ]; then
          echo "should_publish=true" >> $GITHUB_OUTPUT
          echo "Version changed from ${PUBLISHED_VERSION} to ${CURRENT_VERSION} - will publish"
        else
          echo "should_publish=false" >> $GITHUB_OUTPUT
          echo "Version ${CURRENT_VERSION} already published - skipping"
        fi

    - name: Publish to NPM
      if: steps.version_check.outputs.should_publish == 'true'
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Create Git Tag
      if: steps.version_check.outputs.should_publish == 'true'
      run: |
        VERSION="v${{ steps.version_check.outputs.current_version }}"
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag -a "${VERSION}" -m "Release ${VERSION}"
        git push origin "${VERSION}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create GitHub Release
      if: steps.version_check.outputs.should_publish == 'true'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ steps.version_check.outputs.current_version }}
        name: Release v${{ steps.version_check.outputs.current_version }}
        body: |
          ## Auto-published from main branch

          Version: ${{ steps.version_check.outputs.current_version }}

          See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for details.

          ðŸ¤– Auto-published with [Claude Code](https://claude.com/claude-code)
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-mcp-registry:
    name: Publish to MCP Registry
    needs: publish-npm
    runs-on: ubuntu-latest
    if: needs.publish-npm.outputs.published == 'true'

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Publish to MCP Registry
      run: |
        echo "ðŸ“¦ Publishing to MCP Registry..."
        # TODO: Add actual MCP registry publish command when available
        # For now, this is a placeholder for future implementation
        echo "MCP Registry publishing not yet implemented"
      env:
        MCP_REGISTRY_TOKEN: ${{ secrets.MCP_REGISTRY_TOKEN }}

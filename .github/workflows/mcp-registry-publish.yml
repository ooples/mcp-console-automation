name: Publish to MCP Registry

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., v1.0.2)'
        required: true
        type: string

permissions:
  contents: write
  id-token: write

jobs:
  publish-to-mcp-registry:
    name: Publish to MCP Registry
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Extract version
      id: extract_version
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION=${GITHUB_REF#refs/tags/}
        fi
        VERSION_NO_V=${VERSION#v}
        echo "version=${VERSION}" >> $GITHUB_OUTPUT
        echo "version_no_v=${VERSION_NO_V}" >> $GITHUB_OUTPUT
        echo "Publishing version: ${VERSION_NO_V}"

    - name: Update server.json version
      run: |
        VERSION_NO_V="${{ steps.extract_version.outputs.version_no_v }}"

        # Update version in server.json
        node -e "
          const fs = require('fs');
          const serverJson = JSON.parse(fs.readFileSync('server.json', 'utf8'));
          serverJson.version = '${VERSION_NO_V}';
          if (serverJson.packages && serverJson.packages[0]) {
            serverJson.packages[0].version = '${VERSION_NO_V}';
          }
          fs.writeFileSync('server.json', JSON.stringify(serverJson, null, 2) + '\n');
        "

        echo "Updated server.json to version ${VERSION_NO_V}"
        cat server.json

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'

    - name: Install MCP Publisher CLI
      run: |
        # Clone the MCP registry repository
        git clone https://github.com/modelcontextprotocol/registry /tmp/mcp-registry
        cd /tmp/mcp-registry

        # Build the publisher CLI
        make publisher

        # Move binary to a location in PATH
        sudo mv bin/mcp-publisher /usr/local/bin/

        # Verify installation
        mcp-publisher --version

        # Return to workspace
        cd $GITHUB_WORKSPACE

    - name: Authenticate with GitHub for MCP Registry
      run: |
        # Set up git config for the publisher
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"

        # Set up GitHub CLI authentication
        gh auth setup-git

    - name: Publish to MCP Registry
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "Publishing to MCP Registry..."
        echo "Package: io.github.ooples/mcp-console-automation"
        echo "Version: ${{ steps.extract_version.outputs.version_no_v }}"

        # Authenticate using GitHub CLI device flow (non-interactive)
        # The publisher should use GITHUB_TOKEN for authentication
        echo "$GITHUB_TOKEN" | gh auth login --with-token

        # Attempt to publish
        mcp-publisher publish || {
          echo "::error::Failed to publish to MCP registry"
          echo "Checking server.json validity..."
          cat server.json
          echo ""
          echo "Checking authentication status..."
          gh auth status
          exit 1
        }

    - name: Verify publication
      run: |
        echo "✅ Successfully published to MCP Registry"
        echo "Package: io.github.ooples/mcp-console-automation"
        echo "Version: ${{ steps.extract_version.outputs.version_no_v }}"
        echo "Registry: https://registry.modelcontextprotocol.io"

    - name: Commit server.json if updated
      run: |
        if [[ -n $(git status --porcelain server.json) ]]; then
          git add server.json
          git commit -m "chore: update server.json to version ${{ steps.extract_version.outputs.version_no_v }}"
          git push
          echo "Updated server.json committed and pushed"
        else
          echo "No changes to server.json"
        fi

    - name: Create summary
      run: |
        echo "## MCP Registry Publication" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ **Successfully published to MCP Registry**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Package**: io.github.ooples/mcp-console-automation" >> $GITHUB_STEP_SUMMARY
        echo "- **Version**: ${{ steps.extract_version.outputs.version_no_v }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Registry**: https://registry.modelcontextprotocol.io" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Users can now install this version using:" >> $GITHUB_STEP_SUMMARY
        echo '```bash' >> $GITHUB_STEP_SUMMARY
        echo "npx mcp-console-automation" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
